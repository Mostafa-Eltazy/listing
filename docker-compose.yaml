version: '3.7'
services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    ports:
      - '4000:4000'
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      PORT: 4000
      SECRET_KEY: jwt-secret
      
    restart: 'unless-stopped'
    networks:
      - backend
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

    volumes:
      - /app/node_modules

  postgres:
    container_name: pg16
    image: postgres:16-alpine
    command: ['postgres', '-c', 'wal_level=logical']
    volumes:
      - .postgres/pg16/:/var/lib/postgresql/data
    ports:
      - '54321:5432'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PG_HOST: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: web
    ports:
      - '3000:3000'
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:4000/api
      NEXT_SERVER_API_URL: server:4000
    restart: 'unless-stopped'
    volumes:
      - /app/node_modules


networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local